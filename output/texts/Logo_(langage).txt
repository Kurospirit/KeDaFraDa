Logo (langage)

Logo est à la fois une philosophie de l’éducation et une famille de langages de programmation en constante évolution qui aident à la mettre en pratique.
Le projet est né à la fin des années soixante de la rencontre entre le courant cognitiviste en intelligence artificielle et des théories sur l’apprentissage issues de travaux de Jean Piaget et de ses conceptions en matière d’éducation. Ces deux volets sont respectivement représentés par ses promoteurs, Marvin Minsky et Seymour Papert — qui sera le moteur du projet —, au sein du Computer Science and Artificial Intelligence Laboratory (Laboratoire d'intelligence artificielle et d'informatique) du MIT.
L‘appellation, inspirée du grec Logos « parole, discours, intelligence », recouvre, donc, deux concepts étroitement liés quoique distincts : un mode d’apprentissage inspiré des travaux de Jean Piaget sur le développement cognitif de l’enfant et un type d’environnement informatique, à partir d'un langage adapté du LISP spécialement conçu dans une démarche de pédagogie active inspirée des travaux de celui-ci. Il s'inscrit en réaction à une introduction de l'ordinateur dans l'éducation inspirée de l'enseignement programmé.
Sur le plan informatique, Logo est un langage de programmation orientée objet réflexif. Plus lisible que le Lisp, il en est une adaptation, ce qui lui a valu le surnom de « Lisp sans parenthèses ». Essentiellement connu pour la fameuse tortue graphique, mais est également capable de manipuler des listes, des fichiers et des entrées/sorties, … ce qui en fait un langage adapté à l'approche des concepts de l'algorithmique, ce dont on pourra trouver un exemple dans les ouvrages "Computer Science Logo Style" de Brian Harvey, professeur à l'Université de Berkeley.
Bien que langage complet de haut niveau, Logo a été paradoxalement victime de sa tortue - pourtant présente en Pascal - qui l'a cantonnée à une image faussement puérile, ses fonctionnalités de base étaient supérieures aux divers BASIC des années 1980. Il était, à l'époque, un bon marchepied vers la programmation structurée et modulaire et connaît toujours des développements dans le cadre de recherches en intelligence artificielle.
Philosophie du projet.
Logo propose une approche de l’utilisation de l’informatique délibérément constructiviste. C’est l’apprenant, enfant ou adulte expérimenté, qui est le principal acteur de son apprentissage, et l’ordinateur n’est présent que pour lui permettre de construire des réalités dans des environnements divers : les Micromondes, à l’aide d’un langage informatique spécialement conçu à cet effet (la géométrie Tortue en est un exemple).
Il n’est nullement question ici de simulation informatique. « C’est en créant qu’on apprend », telle est la thèse piagétienne que Papert défendra dans la poursuite du projet Logo.
L’objectif va, en effet, au-delà de l’acquisition de concepts qui seraient présents à ces micromondes.
Piaget distingue quatre stades dans le développement individuel dont les apprentissages sont acquis par l’interaction entre l’enfant et son environnement. Il note, toutefois, que, faute de trouver un environnement adéquat – qui n’existe pas -, celui-ci n’atteint pas toujours le dernier stade, celui des opérations formelles. Il émet d’ailleurs cette constatation que nombre d’adultes n'y sont, en réalité, jamais arrivés.
Et c’est ici que l’ordinateur entre en jeu. Papert y voit l’opportunité de créer des environnements propices au développement de ces facultés logiques, à condition qu’il soit correctement adapté à cette fin. Ce sera le cas grâce au langage informatique Logo proprement dit.
L’environnement Logo se veut, donc, imprégné de la pensée de Piaget : il offre à l’apprenant - quel que soit son niveau ou son âge - la possibilité de se représenter et de décrire les phénomènes ainsi que le déroulement de sa démarche entreprise : saisie des moyens utilisés, justification de leur choix et/ou ajustements en cours de tâche. L’objectif poursuivi est d’amener, in fine, l’apprenant à dégager lui-même les caractéristiques de ses actions et de ses propres processus cognitifs. En un mot, qu’il apprenne comment il apprend.
Dans son ouvrage, Papert va même plus loin : l’environnement de Logo pourrait amener l’enfant à adopter de lui-même un mode de pensée procédural, mode de pensée qu’il décrit comment étant plus efficace que tout autre.
Encore faut-il une porte d’entrée qui soit à la portée de cet enfant. Ce sera le rôle de la tortue graphique, un robot dont l’enfant pourra commander les déplacements en s’appuyant sur la connaissance de la manière dont lui-même se déplace. Paradoxalement, le langage été victime de cette tortue qui l'a cantonnée à une image puérile ainsi également d'un succès commercial qui a fait se multiplier des versions incomplètes, non conformes aux exigences fonctionnelles sur lesquelles insiste pourtant son propre concepteur, et parfois limitées à cette tortue graphique. Or, celle-ci n'est pas l'apanage de Logo : elle existe également dans Pascal 7.0.
Dans le développement du projet, l’intelligence artificielle contribuera à différents titres comme celui d’offrir un milieu propice à la recherche fondamentale, avec le Lisp un substrat au développement du langage informatique proprement dit, un premier robot d’expérimentation : la tortue de sol, le développement de la géométrie tortue, … sans oublier l’infrastructure informatique, une ressource rare et chère à l’époque. Il inspire également la notion d'émergence pour comprendre ce que peut pourrait entraîner l'usage de Logo dans d'apprentissage.
Histoire.
Un projet tel que celui porté par Logo relève d’un long processus au cours duquel, tant sous l’influence de l’évolution de la pensée de ses concepteurs – Papert en premier – que des rapides progrès dans le domaine du matériel informatique. Bien que projet et langage informatique vont évaluer de pair, il y a néanmoins parfois lieu d’effectuer une distinction dans l’évocation de leur histoire respective.
La période d’incubation : (1966 à 1980) : une tortue à petits pas.
En tant que langage informatique proprement dit, Logo a été créé chez Bolt Beranek et Newman (BBN). Le concept initial émergea d’intenses discussions en 1966 entre Seymour Papert, Dan Bobrow et . Papert conçut les spécificités fonctionnelles essentielles du nouveau langage et Bobrow contribua à son concept et en réalisa sa première implémentation. Par la suite, contribuèrent également à son développement Richard Grant, Cynthia Solomon, Frank Frazier et Paul Wexelblat.
Il succédait à une première tentative de créer un langage de programmation conçu pour les enfants, TELCOMP, basé sur le FORTRAN. À ce stade, le projet restait très orienté vers l’apprentissage des mathématiques et une familiarisation avec l’algorithmique, tout en insistant pour qu'il soit accessible aux jeunes élèves sans grande préparation. La première version de LOGO fut, d'ailleurs, une version pilote testée en 1967 avec des étudiants en mathématique de grades 5 et 6 à l’école Hanscom Field School de Lincoln, Massachusetts, sous la responsabilité de l’U.S. Office of Naval Research.
À l'issue des quatre années de recherche nécessaires aux chercheurs du BBN, il a reçu de nombreuses interfaces de simulation différentes, dont la tortue graphique, qui apparut cependant relativement tard par rapport à la première version du Logo.
Les premiers utilisateurs en milieu scolaire, eux, l'ont testée à Muzzy Jr High, Lexington, Massachusetts. La première version est sortie, sur un PDP-1, en Lisp. Il était alors appelé Ghost, et était destiné à la résolution de problèmes de base : les bugs pouvaient être mis en valeur immédiatement grâce à la tortue. Le langage n'était pas particulièrement puissant, et la conception avait plutôt été axée sur la simplicité d'utilisation pour des débutants en informatique (qui devaient alors utiliser un Teletype). La possibilité de fournir un commentaire détaillé des erreurs était également déterminante.
En 1970, Seymour Papert fonda le laboratoire LOGO au M.I.T. L’année suivante vit apparaître les premières expérimentations avec les tortues LOGO (de sol ou d'écran), considérées à tort par beaucoup pour être essentielles au projet LOGO alors qu’elles n’en représentent qu’un sous-ensemble. Plusieurs implémentations sur différents matériels et des expériences pédagogiques suivirent au cours de la décade des années 1970 au M.I.T. mais aussi ailleurs comme à l’Université d’Edimbourgh ou à celle de Tasmanie, en Australie (c’est, d’ailleurs, par cette dernière que se diffusa la première tortue graphique sur Apple II sous le nom de Tasmania Logo).
Cette phase de réflexion et d'expérimentation est marquée par des recherches ponctuelles au sein d’écoles voisines (dont la Brookline Public Schools) et donnèrent lieu à des publications à diffusion restreinte (« "papers" »), les Logo Memos, relatant les enseignements tirés de ces expériences.
Apogée et désillusion (1980 à 1990) : du lièvre à la tortue.
LOGO va quitter le laboratoire et connaître sa période faste au début des années 1980. Deux facteurs vont contribuer à cet engouement :
L’horizon de la tortue s’élargit, en effet, avec l’apparition des micro-ordinateurs. Fin des années 1970, le MIT Logo Group s’attelle à développer des versions de Logo pour le Texas Instruments TI-99/4A et Apple II, tous deux sortis en 1977. Si la base du langage est commune, les interfaces graphiques sont différentes eu égard aux spécificités des deux machines : du fait de son interface de type « jeux vidéo », la version pour le TI 99/4A privilégie les projets orientés vers le mouvement (les dyna-turtles ou lutins), tandis que celle pour l’Apple II donne la préférence au graphique tortue bien connu et à la manipulation de mots et de listes - bien moins connue.
En 1980 est lancé un projet pilote à la Lamplighter School de Dallas où 50 TI 99/4A sont mis à la disposition des 450 élèves. Dans la foulée est lancé un autre projet à New York avec 12 TI 99/4A auxquels s’ajouteront un peu plus tard quelques Apple II. De ces deux projets naîtront des produits commercialisés par la société Terrapin Softwares (qui commercialise également des tortues de sols depuis 1977) : le TILOGO sur le TI 99/4A et le Terrapin Logo, devenu par la suite Logo PLUS, sur Apple II.
En 1980, une nouvelle entreprise est formée, la Logo Computer System Inc. (LCSI) qui va regrouper sous l’égide et la présidence de Papert nombre de chercheurs, enseignants, développeurs et autres programmeurs embarqués dans l’aventure qu’a été le développement du projet. Dans les années qui suivent, LCSI implémentera sur la plupart des nouveaux micro-ordinateurs le langage avec ses caractéristiques fonctionnelles réclamées par son initiateur. Ainsi naquirent APPLE LOGO, Commodore LOGO, Atari LOGO, ensuite IBM LOGO, et enfin, Mac LOGO, tous construits sur les mêmes fondements, mais enrichis en fonction de l’évolution technique des matériels. Des versions pour une douzaine de langues furent développées, chose en soi très facile puisque l’architecture permettait de redéfinir aisément les primitives du langage (de même qu’il est toujours possible de « doubler » une primitive par une procédure construite avec celle-ci). En réalité, la vraie difficulté dans les traductions a résidé dans le choix des termes qui doivent être tirés du langage naturel et ne revêtir aucune ambiguïté. C’est ainsi, par exemple que Papert, après avoir longtemps hésité, donna sa préférence à la traduction canadienne DROITE ou GAUCHE plutôt qu’aux TOURNEDROITE ou TOURNEGAUCHE devenus usuels par la suite sous l’influence française. Petit détail amusant, c’est pourtant au Centre mondial informatique et ressource humaine que Papert, qui en était devenu le directeur scientifique, mettra la dernière main à la version française du Apple Logo.
Le plus digne successeur de cette série est certainement le UCBLogo développé par Brian Harvey qui ne cessera d’enrichir le langage informatique dans le strict respect du métalangage, tout en indiquant explicitement comment changer ou traduire les primitives et les messages.
D’une manière ou une autre, les nombreuses versions de Logo s’inspireront avec plus ou moins de rigueur des versions LCSI, y compris un Logo de qualité discutable pour les ordinateurs MSX qui domineront de plus en plus le marché de l’éducation, sauf aux États-Unis où Apple reste le favori. Une domination renforcée par l’échec du lancement du PC Junior d’IBM qui pouvait supporter un Logo de qualité et le choix politique en France de privilégier Thomson MO5 dans le Plan informatique pour tous. Les développeurs se tourneront alors vers ce matériel en ajoutant, par exemple, les tortues dynamiques développées sur le TI 99/4A, le tout fonctionnant avec des cartouches à insérer.
À la même période, va se manifester un certain intérêt pour utiliser Logo en tant que langage de programmation proprement dit comme ce sera le cas avec le MacLogo de LCSI et Object Logo de Coral Software, une autre version pour le MacIntosh qui comprenait notamment un compilateur et même un débuggeur. Mais Logo ne parvint jamais à intéresser les programmeurs professionnels, sans doute à cause de l'étiquette « pour enfant » qui lui collait à la peau.
En 1985, LCSI lance Logowriter qui, outre une interface simplifiée et plus intuitive, comprend un traitement de texte et réintroduit les « lutins » (sprite), des tortues qui peuvent prendre des formes et des couleurs différentes.
Parallèlement, et Steve Ocko vont développer LEGO Logo une interface entre Logo et des moteurs, lumières et autres détecteurs utilisables dans des montages avec les fameuses briques Lego. Cette idée d’utiliser des robots n’était pas neuve mais recueillit néanmoins un succès commercial.
Alors que LCSI marque le pas avec Logowriter, Terrapin Softwares et Harvard Associates, les premiers pour Macintosh, les seconds pour DOS et ensuite Windows, vont continuer à développer des versions qui, bien que bénéficiant des progrès du matériel, se cantonneront à la géométrie Tortue et à la manipulation de mots et de listes.
Par contre, même si les initiatives d'introduction de Logo se multiplient durant cette décennie, il faut bien reconnaître que le volet « projet d'apprentissage » du projet marque le pas dans un monde de l'éducation qui se révélera très vite frileux (cf supra).
Les expériences s'arrêtent souvent à une ou deux semaines, c'est-à-dire le temps de découvrir et de s'amuser avec la tortue graphique comme telle que celle menée par l'INRP en France, sauf dans des ateliers privés ou des écoles privilégiées par un projet pédagogique qui favorise une approche active de la part de l'apprenant.
Ce n'est d'ailleurs pas un hasard si Logo reçoit un accueil privilégié en Argentine où l'éducation est fortement imprégnée de la pensée piagétienne.
Après 1990, de Logo au constructionnisme ; les métamorphoses de la tortue.
Au début des années 1990, Logo est considéré comme un produit vieillot et obsolète en Amérique du Nord. Logowriter n’a plus guère évolué depuis sa sortie. Quant au Logo classique, il n’a pas intégré les apports de la rapide évolution des ressources informatiques. En Europe, l’engouement des premiers temps a fait long feu après l’échec des plans informatique visant à introduire les nouvelles technologies de l’information dans l’enseignement. À l’exception de la Grande-Bretagne qui l’utilise comme un outil pédagogique sans rapport avec le projet d’apprentissage sous-jacent, son usage est devenu anecdotique dès le milieu des années 1980 dans un contexte pédagogique largement défavorable à sa philosophie.
Ce n’est pas nécessairement le cas partout. Par exemple, un ambitieux programme est lancé au Costa Rica par une « ancienne du MIT», Clotilde Fonseca, qui va faire école dans une douzaine de pays d’Amérique Latine. Au Japon, Logowriter va également faire son chemin au début des années 1990.
Un regain d’intérêt se manifestera vers le milieu de la décennie où l’on verra s’effacer Logo, tel qu’il était défini au début des années 1980, au profit du développement de nouveaux produits et d’un nouveau concept : le .
En fait, si le nom de Logo va peu à peu disparaître, les idées qui en formaient le substrat, subsistent dans les grandes lignes. Même si elles intègrent de nouvelles fonctionnalités, les conceptions à la base du langage informatique restent les mêmes : un langage « naturel » avec des mots « de tous les jours », que l’on peut combiner et enrichir de nouveaux mots ;
Par contre, le projet éducatif, lui, s’est affiné. D’abord plutôt vague sur son option pédagogique dans sa description du « facilitateur » en milieu Logo, Papert opte résolument pour une pédagogie active, en insistant sur l’importance de créer des choses - « making things - lorsqu’on apprend ainsi que sur celle de la verbalisation dans la construction de nouvelles connaissances.
Plus tard, Resnick, le concepteur des nouveaux micromondes, va encore compléter le concept en y ajoutant une dimension de travail de groupe.
Sur le plan informatique, MicroWorlds Logo va ajouter dès 1993 de nouvelles fonctions à l’environnement Logo en se basant sur l’interface MacIntosh : de nouveaux outils de dessins, un éditeur de formes, un générateur de musique et la possibilité d’importer des images ou des sons. De même, il prend en charge les tâches multiples de sorte que des objets peuvent être animés ou créer de manière indépendantes : la tortue n’est plus toute seule.
Au MIT, une brique programmable apparaît dans le cadre de Lego Logo qui rend inutile une liaison avec un ordinateur.
Par ailleurs, Brian Harvey va continuer à enrichir le langage de base sur le plan purement informatique UCBLogo, dans sa version distribuée librement, comprend 344 primitives.
À l’autre extrémité, dans le domaine de la recherche, avec, Mitchel Resnick va développer avec des environnements où des milliers de « tortues » peuvent interagir.
Plus récemment, le même Resnick proposera avec Scratch un nouveau projet de type Logo intégrant une implémentation visuelle et dynamique du langage de programmation Smalltalk basé sur Squeak. Squeak est l'héritier du Logo dans l'approche qu'il propose de l'interaction informatique-éducation. Il s'inscrit dans les cadres théoriques de la psychologie du développement et des idées de gens comme Baldwin, Piaget ou Vygotski.
Implémentations.
Il existe plus de 130 implémentations du Logo, aux caractéristiques variées.
Et, faut-il le dire, de qualités variables tant au niveau informatique que par rapport au projet éducatif. Certains ne sont, d'ailleurs pas des langages informatiques, même simplifiés, mais seulement des programmes informatiques.
Ainsi, Papert s'insurgera contre les versions simplifiées comme le « Logo instantané » où les instructions sont facilitées par des touches fonctions, celles limitées au graphisme Tortue ou encore celles où la tortue ne tourne que par des multiples de 10 ou de 30° : "Comment peut-on découvrir à quoi ressemble un angle à 45 degrés quand il peut tourner la tortue seulement dans les multiples de 10 ou 30 degrés à chaque fois ?"
Berkeley Logo.
UCBLogo est l'implémentation la plus populaire, un logiciel libre réalisé par Brian Harvey de l'université de Californie à Berkeley.
Il existe plusieurs implémentations de" UCBLogo", parmi lesquelles "MSWLogo", une version pour MS Windows très utilisée dans les écoles britanniques.
Implémentations propriétaires.
D'autres implémentations ont ou ont eu une importance qui mérite d'être signalée : le P_Logo, des éditions Profil ; le jLogo et le XLogo, basées sur des interpréteurs écrit en Java.
Il n'existe aucune norme de Logo, mais uniquement une tradition. Ainsi, on constate des différences importantes entre les différentes évolutions du Logo. Les exemples de code donnés ci-dessous sont censés fonctionner dans la plupart des dialectes du Logo.
Logo, langage informatique.
Aperçu du Métalangage.
LOGO fait partie de la famille des langages de programmation orientée objet. Ses règles de syntaxe sont réduites au minimum et le vocabulaire se rapproche le plus possible du langage "naturel", des mots de tous les jours. C'est évident pour les commandes de la tortue graphique, mais également pour le traitement de mots ou de listes. Par exemple, il comprend des termes comme SAUFPREMIER, PREMIER, … aujourd'hui largement utilisés dans les bases de données.
À l'origine n'existe que 2 types d'objets : les MOTS et les LISTES.
Les "MOTS" sont des chaînes de caractères. Formellement, les nombres ne sont que des mots particuliers reconnus et évalués automatiquement par leur valeur. 
Les "LISTES" sont des suites ordonnées d'objets.
Un mot est signalé par un guillemet, une liste par des crochets. Si un mot n'est pas précédé d'un guillemet, il est interprété comme une procédure (voir ci-dessous).
Ces objets peuvent servir d'entrées - "d'ARGUMENTS" - à des OPÉRATIONS ou des COMMANDES.
Une OPÉRATION sert à créer un nouvel objet à partir des objets entrant (formellement des ARGUMENTS), qu'elle "retourne" à une autre opération ou à une COMMANDE.
Une COMMANDE dit ce qu'il (l'ordinateur ou le robot) doit faire de cet objet.
Une ligne de programmation est et ne peut être que formulée qu'en termes d'INSTRUCTION.
Une instruction se compose impérativement d'une - et d'une seule - COMMANDE, suivie d'un objet, d'une ou de plusieurs OPÉRATIONS qui retournent l'objet qu'elles créent à l'éventuelle opération qui la précède, ou à la commande.
C'est pourquoi taper simplement 5 + 5 (ou, plus formellement, SOMME 5 5) entraîne un message d'erreur du type ""Ne sait que faire avec 10"", puisqu l'instruction est incomplète du fait de l'absence de commande. De même ECRIS "tout seul" fera apparaître une message "Pas assez d'entrée pour…" puisque, cette fois-ci l'instruction est incomplète du fait de l'absence d'objet.
Par contre, dans l'instruction ECRIS 5 + 5 affiche 10, l'opération d'addition sur des mots directement évalués comme des nombres retournant son résultat à la commande d'affichage,
De même, dans le micromonde "Tortue", AVANCE 5 + 5, fera se mouvoir le robot tortue de 10 pas.
Par contre, ECRIS + 5 produira un affichage du texte 5 + 5 puisqu'il s'agit d'afficher le contenu d'une liste signalée par les […].
Un groupe d'instructions peut toutefois être écrit sur une même ligne. Sera, donc, licite :
codice_1
La seule exception à la règle de commande unique réside dans l'emploi de la primitive REPETE qui accepte comme entrée une liste d'instructions.
codice_2 (formule du cercle en géométrie LOGO).
Soit une instruction qui commande de répéter 360 fois, deux instructions
Les mots prédéfinis dans le langage sont appelés PRIMITIVES du langage.
Ce langage de base peut s'enrichir de PROCÉDURES créées par l'utilisateur. Une fois définie, ces procédures vont faire partie intégrante du langage et obéissent aux mêmes règles d'écriture. Leurs définitions sont écrites et corrigée dans l'éditeur "ED" ou, dans certaines versions, définies directement à l'aide de la commande "POUR", suivie du nom de la procédure (ce qui facilite le passage de la commande directe vers la programmation)
Une procédure comprend trois partie : son nom, les commandes et opérations que son activation déclenchera et le mot FIN. Elle peut être définie comme nécessitant une ou plusieurs entrées qui, sont, en réalité des variables pouvant stocker localement des objets. Dans ce cas, leur utilisation exigera impérativement l'introduction d'objets. Taper un mot qui n'est pas une procédure ou une primitive sera signalé comme une erreur "ne sait comment…"
LOGO se présente comme un langage évolutif : les "primitives" ne sont, en réalité que des procédures "build in".
Dès lors, en toute logique, une procédure doit pouvoir comprendre des procédures, "y compris elle-même"', ce qui confère à LOGO la puissance d'un langage récursif.
codice_3
est donc licite et crée une boucle sans fin.
De même, une procédure peut être construite de manière à nécessiter un ou plusieurs arguments.
codice_4
crée une procédure qui permet de dessiner des cercles de taille variable : par exemple CERCLE 0,5 ou CERCLE 1 ,
mais, toujours, à partir d’un point de la circonférence (ici situé à 180°) puisque la tortue dessine le contour d’un objet graphique et part, dès lors, d’un point sur ce contour.
"PS : rien n’est plus difficile que de dessiner un cercle à partir de son centre : par exemple, au point d’origine (0,0) de la tortue, au centre de l’écran, pour ne rien dire du dessin de cercles concentriques !"
Toujours aussi logiquement, une procédure peut être une opération en utilisant la primitive RETOURNE.
Ainsi si on définit la procédure suivante :
codice_5
codice_6 affichera
30
"Force est de reconnaître qu'en réalité, peu de versions de Logo intègrent ces aspects."
L'interprétation se fait de la gauche vers la droite. Par exemple,
ECRIS SOMME 7 PRODUIT 5 2
17
est interprété par Logo de la manière suivante :
Les variables ne doivent pas être déclarées au préalable. Elles ne nécessitent aucune notation particulière et peuvent être nommée par n'importe quel mot, même par le nom d’une procédure existante, et il est d’ailleurs chaudement recommandé de choisir des termes explicites. Leur contenu étant un objet, il peut être un MOT ou une LISTE.
Par défaut, les variables sont globales. Dans des versions complètes, elles peuvent éventuellement être déclarées comme locales. Lorsqu’elles servent d’arguments à une procédures, elles sont toujours locales et leur contenu ne conserve leur valeur que durant l’exécution de la procédure. Il est néanmoins possible de créer des variables globales à l’intérieur d’une procédure.
Exemple :
DONNE "Nomdelavariable 4
ECRIS SOMME 7 PRODUIT 5 CHOSE "Nomdelavariable
27
En notation simplifiée et plus courante, on peut également écrire :
ECRIS SOMME 7 PRODUIT 5 :Nomdelavariable
27
De même, Logo comprend également des notations mathématiques préfixes ou infixes.
Exemple :
Formellement, seule le forme préfixe répond aux exigences de syntaxe comme quoi les objets suivent une opération à laquelle ils servent d'arguments. Tout comme l'interprétation directe d'un nombre, la forme infixe n'existe que parce que cette notation est familière.
Enfin, par défaut, Logo sauvegarde dans un seul fichier tout l'espace de travail et le restaure en une seule instruction.
Interface graphique : la tortue.
Le terme "Tortue" relève d'une tradition née vers 1950 avec les premiers robots construits par le neurophysiologiste William Grey Walter, pionnier de la cybernétique avec ce qu'il appellera ses "tortoises".
Description.
À l'origine un robot de sol, la "tortue" est un robot sur l'écran, prêt à explorer son espace. Dans ce cas, le plus connu, elle se présente la plupart du temps sous la forme d’un triangle orienté dans la direction qu’elle va prendre. Elle traîne à l’arrière – "et non derrière elle, la nuance est d’importance d’un point de vue pédagogique" – un crayon qui lui permet de laisser des traces de son passage. Ce crayon peut être levé (LC) ou remplacé par une gomme. Avec l’évolution du matériel informatique, il pourra également prendre des couleurs différentes.
Au départ, ce robot occupe une position et une orientation précises. Au départ, ce seront le milieu (position 0,0) et le haut de l’écran, c’est-à-dire vers le « Nord », au cap de 0°.
On travaille, donc, en coordonnées polaires et non pas en coordonnées cartésienne, même si le langage comprend la possibilité d’utiliser ces dernières. La Tortue se déplace comme un navire, c’est-à-dire en prenant une direction relative et en parcourant une distance à partir d’un point et d’une orientation de départ.
Mieux, elle se déplace, en réalité sur un tore, ce qui explique qu’en position normale, elle « ENROULE », c’est-à-dire que si elle disparaît par un côté de l’écran, elle réapparait à son opposé.
Le concept de la « géométrie Tortue » est issu des travaux du Logo Group du MIT et permet à l’apprenant d’explorer un univers géométrique en s’identifiant à la tortue. Ce que Papert appellera la « syntonie avec le corps ».
Au départ, l’utilisateur lui donne des ordres simples, « militaires » : AVANCE, RECULE, DROITE, GAUCHE pour la faire se déplacer. Elle se déplace pas à pas et s’oriente par degré ; à chaque 360°, elle fait, donc, un tour complet sur elle-même (théorème du tour complet de la tortue). Du fait de son crayon, elle laisse une trace de son passage sur l’écran (sauf, bien sûr, si on lui a donné l’ordre de la lever).
Par la suite, ces ordres pourront être rassemblés dans des PROCÉDURES qui enrichiront le langage informatique et pourront, par conséquent, elles-mêmes être appelées dans d’autres procédures.
Dans un grand nombre d'interfaces graphique de Logo, l'écran est divisé en 2 parties afin de permettre de visualiser à la fois les instructions qui lui sont données et leurs résultats :
Quelques exemples.
Exemple de définition de procédure : la procédure CARRE devra tracer un carré à l'écran. Le texte est tapé dans l'éditeur du LOGO, puis sauvé.
ou plus simplement
Emploi de CARRE dans une autre procédure :
Dans cet exemple,
Pour employer PLCARRE, il suffit de taper dans la zone de commande PLCARRE.
Le passage de paramètres à une procédure est possible.
Utilisation : CARRE 50 trace un carré de 50 pas de TORTUE.
Pour faire un CERCLE, il suffit de décrire le périmètre de celui-ci
"En réalité, il s'agira d'un polygone régulier à 36 côtés, cette formule ne s'applique qu'au versions LOGO où la Tortue ne peut tourner que par des angles de 10°.
La rosace présentée en illustration peut donc s'écrire (KTurtle)
pour un hexagone
REPETE 6100 TG 60
Logo, philosophie de l'éducation.
Il faut le dire tout de go : dès l’abord, Papert n’envisage pas Logo – et, l’informatique, en général - comme un outil pédagogique, ni, a fortiori, son usage scolaire, mais comme le moyen de créer un nouvel environnement d’apprentissage. Dans "Jaillissement de l'esprit" (op. cit.), il oppose l'apprentissage syntone à l'apprentissage dissocié que présente traditionnellement l’école, dans laquelle ce qui est enseigné ne s’accorde pas avec les enfants (cf infra). Néanmoins, passé les premiers pas en laboratoire, force est de constater que les premières utilisations de Logo se passeront dans des écoles, lieux institutionnels – institutionnalisés – des apprentissages. Dès lors, sauf à réserver Logo à quelques clubs ou ateliers fréquentés par quelques privilégiés, le problème de son introduction dans le milieu scolaire va vite se révéler incontournable et, dans son sillage, apparaîtront les questionnements pédagogiques.
Le temps passant, Papert montrera de plus en plus de réticence vis-à-vis de l’école : « "Une réforme (de l’enseignement) vise à modifier l'école, mais, in fine, c’est l'école qui change la réforme. On peut voir au premier abord une tautologie dans cette proposition d'expliquer les échecs d’une réforme. Mais dire que l'école change de la réforme est très différent de dire tout simplement que l'école résiste ou rejette la réforme. Elle résiste à la réforme d'une manière particulière - en s'appropriant ou en l'assimilant à ses propres structures. Ce faisant, elle désamorce l’action des réformateurs et parvient parfois à prendre dans quelque chose de ce qu'ils proposent" » .
Selon lui, les ordinateurs ont plutôt la vocation de substituer une autre structure à l’école, pas de l’améliorer.
Cadre théorique : les hypothèses de Papert.
Dans le sillage de Piaget.
Avec le projet Logo, Papert veut mettre en pratique les idées constructivistes de Piaget grâce à l'informatique. Il ajoute, toutefois, une dimension aux notions d’assimilation et d’accommodation développées par ce dernier : l’importance de l’affectif dans le processus d’apprentissage (NB : Piaget n’a pas étudié cet aspect par manque d’éléments théorique à ce sujet).
Une autre différence porte sur les raisons d’une difficulté de l’apprenant à assimiler certains concepts. 
Selon Piaget, certains concepts ne pourront être assimilés qu’à partir d’un certain âge et après l’assimilation d’autres concepts (les pré-requis). Ces stades de développement de l’intelligence sont communs à tous les enfants et ont un caractère universel, indépendant de la culture au sein de laquelle se passe l’apprentissage. Par contre, pour Papert, si l’acquisition d’un concept pose problème, c’est par manque de matériau à disposition de l’apprenant pour l’aider à l’assimiler dans sa culture. Autrement dit, l’ordre dans lequel sont acquises les connaissances n’a pas ce caractère universel, mais dépend de l’abondance ou de pénurie de matériaux permettant leur acquisition dans une culture donnée (cf . Partant de là, Papert propose de créer de nouveaux matériaux à manipuler par l’enfant qui soient propres à aider l’acquisition de notions comme les mathématiques et la physique et cela, au travers d’environnements construits à cet effet à partir de cette nouvelle venue qu’est l’informatique.
Apprentissage syntone versus apprentissage dissocié.
Encore faut-il pour cela que ce support informatique réponde aux exigences d’’un tel matériau pour que l’enfant puisse s’en emparer et le manipuler comme les autres.
Pour ce faire, il part d’un constat : l’apprentissage le plus répandu et qui réussit le mieux, est celui de l’apprentissage de la langue. Or, cet apprentissage se produit naturellement, sans intervention d’enseignant désigné. Il se construit, point barre. Le Logo group va s’inspirer de ce modèle d’apprentissage de la langue (en dehors de l’école) pour tenter de l’appliquer à d’autres domaines. Pour cela, il faut que l’enfant continue à trouver un sens à ce qu’il fait, que ceci s’accorde avec sa perception et ce qu’il connaît déjà.
C’est tout le contraire, selon lui, d’un apprentissage scolaire dominé par une conception disciplinaire et transmissive de l’enseignement et le suivi d’un “programme d’enseignement” pour chaque niveau qui ne s’accorde pas avec l’enfant, mais qui lui est imposé.
Dès lors, prenant le contre pied les dictacticiels qui, créé pour enseigner à l’élève une discipline, ne font que reproduire l’enseignement classique avec un ordinateur, il veut que ce soit l’enfant qui apprenne à l’ordinateur à réaliser des tâches et non l’inverse et, donc, à l’instar de Dwyer avec le BASIC, l’apprenant sera programmeur et non programmé. 
Par contre, contrairement à ce dernier qui, même simplifié, reste un langage d’informaticien, LOGO sera conçu dans une langue proche du langage naturel et, donc, facile à assimiler.
Apprendre les mathématiques en « mathématie ».
Tout à l’opposé de cet apprentissage naturel du langage est, pour le mathématicien qu’est Papert, celui des mathématiques. En effet, pour nombre (la plupart ?) des personnes ayant suivi une scolarité traditionnelle, les mathématiques reste un sujet de dégoût.
Or, pour lui, la distinction entre “sciences” et “lettres” comme deux groupes de disciplines n’est que culturelle : tout le monde est naturellement mathématicien de par des besoins de la vie courante, ce qui n’empêchent pas certaines personnes de refuser les mathématiques dès qu’elles sont identifiées comme telles.
Si beaucoup de personnes sont mathophobes, c’est à cause de l’enseignement scolaires des mathématiques qui se caractérise par une dissociation du vécu des enfants et se résume souvent pour eux par des recettes à apprendre. Ces mathématiques scolaires sont une construction faisant suite à des accidents, ou plus généralement, une histoire, mais n’ont pas été réfléchies selon des critères objectifs. L’habitude est devenue la seule raison du contenu de ces programmes scolaires en mathématiques.
Pour remplacer cela, Papert propose de plonger les enfants en “mathématie”. Les enfants vont découvrir naturellement des notions de mathématiques dans un micromonde de la même manière qu’ils apprennent naturellement une langue ou d’autres concepts, telle que décrite par Piaget.
Ce micromonde où les mathématiques pourraient être appropriées par les enfants, doit reposer sur trois principes :
Si ce dernier principe démontre l’intérêt que Papert porte au champ socio-cognitif de l’apprentissage, il implique que l’enfant ne se retrouve pas seul devant l’ordinateur. Et la problématique de cet accompagnement contituera sans doute LA pierre d’achoppement pour Logo.
La tortue, objet de transition.
Pour que l’enfant entre dans ce micromonde de la « mathématie », Logo comprend une voie d’accès qui lui propose un apprentissage syntone, cest-à-dire qu’il lui permette de relier la manipulation du nouveau matériau proposé avec ses apprentissages passés tout en restant attractif et motivant : d’où la partie graphique du langage consacrée à la Tortue.
La Tortue – quelle que soit sa forme : robot ou forme sur l’écran - est un objet anthropomorphique (au début, beaucoup d’enfants lui prêtent toutes sortes d’intentions !) dont les déplacements dans l’espace peuvent être commandés par des mots concrets, issus du langage familier. L’exécution des dessins par des commandes simples crée ainsi une seuil de communication avec l’ordinateur qui reste très proche du quotidien.
Apprendre à contrôler la Tortue met à contribution chez l’enfant son désir de communiquer, son plaisir de donner des ordres et son goût pour le mouvement. L’activité de programmation consiste, donc, à apprendre à l’ordinateur (la Tortue, en l’occurrence) ce qu’il veut lui vouloir faire. De la sorte, si l'enfant peut s'appuyer sur la connaissance intuitive qu'il a des mouvements de son compte (sur ses schèmes sensori-moteurs), en s'identifiant avec la Tortue ("jouer Tortue" avec son corps), il doit traduire son intuition sous une forme qui soit compréhensible à celle-ci. Or ""traduire une intuition sous forme de programme, c'est la concrétiser, la rendre plus palpable et plus accessible à la réflexion"" (Papert, 1981, o. c., p. 82).
La Tortue est, donc, un objet de transition entre l’acquis de l’enfant qui est la connaissance de son corps et de ses mouvements ainsi que le langage simple qui les commande ou les décrit. Cette appropriation est facilitée par trois éléments qui, mutatis mutandis, correspondent aux principes directeurs décrits plus haut :
Un autre aspect du langage Tortue réside dans une nouvelle approche de la géométrie en propposant un micromonde que l’enfant peut explorer et dans lequel il peut construire selon son mode d’apprentissage naturel et non sur une approche formelle et propositionnelle de cette partie des mathématiques : une nouvelle pierre d’achoppement pour Logo.
L'erreur n'est pas une faute.
Traditionnellement, lorsqu’un élève fait une erreur en mathématiques – comme dans d’autres domaines -, il s’empresse de l’oublier. Cette réaction est encouragée par la sanction scolaire qui dit c’est soit "faux", soit "bon".
En LOGO, l’erreur n’est pas qualifiée de cette façon. Ce n’est qu’un défaut partiel et momentané dans un programme (« un simple bug informatique »). On ne jette pas la totalité d’un programme - ou d’une liste d’instructions dans les premiers temps - parce que tout ne se passe pas comme prévu. L’élaboration d’un dessin, puis d’un programme, se fait par une suite d’essais, d’erreurs et de corrections. Les enfants prennent conscience qu’il n’y pas que du “tout bon” et du “tout faux” puisque qu’ils peuvent s’approcher peu à peu, pas à pas, de la solution pour un projet initialement imaginé.
Papert développe longuement cet aspect de suites d’essai-erreur ainsi que le jugement de valeur porté sur l’erreur, car cette question est cruciale à ses yeux. LOGO ne peut pénaliser pas l’erreur de la même manière que l’enseignement classique qui décourage les enfants à se construire des théories.
L’objectif à poursuivre dans cette esprit, était de trouver le moyen de fournir à l’enfant un contexte lui permettant d’élaborer des “théories de transitions”. Ces théories de transitions sont communément qualifiées de “fausses”, sans plus. Or, dans leur processus d’apprentissage, les enfants se construisent des modèles qui leur permettent de se faire la main avant de les abandonner s'ils se révèlent inadéquats. Papert s’appuie ici sur les travaux de Piaget qui démontrent que ces fausses théories qu’élaborent les enfants sont nécessaires pour apprendre à penser. Les théories non orthodoxes des jeunes enfants ne résultent pas d’une faiblesse, mais sont un moyen pour eux d’assouplir leurs facultés cognitives, de développer en s’entraînant leur aptitude à la construction de théories plus orthodoxes. Les micromondes procureront, donc, aux enfants l’occasion de se construire des théories à eux et de les confronter à la réalité des choses en les testant sur l’ordinateur. De la sorte, ils entrent sans le savoir dans une démarche scientifique classique, mais ce nouveau statut de l'erreur sera une fois encore une autre pierre d’achoppement pour Logo.
La programmation structurée comme modèle de pensée.
Piaget s'est interrogé sur une certaine convergence entre les résultats de ses recherches sur la genèse des opérations logiques et mathématiques et un certain nombre de résultats mathématiques atteints dans leurs recherches des structures-mères (Structure_) par les Bourbaki.
Chez ces derniers, une structure complexe est une combinaison de structures plus simples, dont les plus importantes sont des structures mères qui constituent des éléments fondamentaux. Or, Piaget va observer que les enfants développent des structures intellectuelles proches de ces dernières :
Il existerait, donc, une similitude entre le parcours de l’enfant construisant l’arithmétique élémentaire et l’histoire de la mathématique, mais également entre les mécanismes qui permettent aux deux de construire une nouvelle connaissance plus complexe à partir d’anciennes plus simples. En bref, l’acquisition d’une structure facilite l’acquisition des autres.
Papert étend cette similitude à l’informatique par une autre correspondance avec la programmation : des procédures simples, en s’assemblant, peuvent former des résultats complexes.
Alors que Piaget cherchait à comprendre comment se développe l’enfant "hinc et nunc", Papert cherche à agir sur le développement via le nouvel environnement culturel permis par l’ordinateur. La culture informatique peut “"grandement renforcer, chez les enfants, leur capacité à concevoir les structures en place sous des aspects qui mobiliseront leur potentiel conceptuel"”. Mais cela n’est possible que lorsque le langage informatique dispose de procédures pures (autonomes et mobilisables de manière modulaire) comme c’est le cas en Logo. En effet, dans son emploi, la programmation structurée devient assez vite indispensable. Elle consiste à découper un tout en petites parties indépendantes qui, une fois au point, peuvent entrer une ou plusieurs fois dans le tout. Dès qu’un enfant a un projet un peu ambitieux, il est confronté au handicap de répétition et à la difficulté de débugage. Or, ce dernier est largement facilité lorsque le projet est découpé en petites procédures (modules).
L’hypothèse de Papert est que la pratique de la programmation structurée aura des conséquences sur le raisonnement de l’enfant face à certaines autres tâches complexes dans la mesure où il y aura transfert de cette manière de décrire et d’aborder un problème lorsqu’il sera confronté à d’autres situations situées dans un autre champ d’action.au nouveau problème qui se pose à lui. Mais encore faut-il pour cela que l’enfant accède à cette programmation structurée ! Encore une pierre d'achoppement.
La Tortue à l’épreuve de la pédagogie.
Dans un premier temps, les enseignants, sans y être forcément favorables, ont bien accueilli l’alternative que leur apportait Logo comme un moindre mal à l’introduction de l’ordinateur à l’école face à l’enseignement assisté (EAO) ou à l’enseignement programmé par l’ordinateur (EPO). Rares furent toutefois ceux qui adhéraient à la vision de Papert en connaissance de cause tant sur le plan de l’apprentissage que sur celui de l'impact possible du nouvel outil informatique sur l'enseignement. Rien d’étonnant, dès lors, à ce que les conceptions des mises en œuvre de Logo divergeront rapidement entre un monde pédagogique centré sur le « comment produire un "enseignement" efficace ? » et Papert, centré comme Piaget sur le « quelles sont les conditions proprices à un "apprentissage" efficace ? ». Mais, par ailleurs, on ne peut nier que certains aspects de Logo faisaient problème (cf infra).
Il reste que comme le constate Jean-Michel Chevalier, ""L'intensité des critiques (des pédagogues) est à la hauteur de l'engouement qu'il suscite dans les années 80"". Ceux-ci sont, en effet, guidés avant toute chose par un souci de rentabilité et de gain de temps en contexte scolaire, Tout à l'opposé de Papert.
Sur le plan expérimental, Logo avait d’abord été utilisé dans une approche surtout individualiste propre au contexte américain. En France, Gérard Bossuet va rapidement le présenter comme n’étant pas seulement un objet structurant, mais également comme un prétexte à la communication avec les autres, enfants ou adultes, au même titre que, par exemple, l’imprimerie chez Célestin Freinet . Partant de l’idée que la classe forme une micro-société englobant enfants, enseignants mais aussi parents et s’inspirant des travaux de Doise et Mugny sur l’importance de l’interaction sociale dans le développement cognitif, Pierre Biernaux franchit encore un pas en expérimentant l’introduction des ateliers à l’intérieur même de cet autre entité sociale qu’est l’école - démarche qui impliquait nécessairement l’inclusion de l’équipe de chercheurs dans ses observations.
Plus tard, Resnick intégrera cette dimension de travail en groupe dans l’idée de « constructionnisme ».
Apprendre en « Mathématie » peut être déconcertant… pour l’enseignant.
Très tôt, souvent dans le cadre de thèses de doctorat, des chercheurs se sont intéressés aux apport de Logo dans leur domaine - celui de l’enseignement des mathématiques - soit pour faciliter l’accession de certains concepts : géométrie, variable, récursion,… soit pour étudier l’opportunité de l’intégrer dans le cursus d’algèbre ou de géométrie. Le plus souvent, ceci s’adressait à des élèves plus âgés et Papert, de rappeler dans la préface de l’ouvrage précité que le but de Logo était aussi, sinon avant tout de donner aux jeunes enfants la possibilité de se familiariser très tôt avec des notions proches, d’y "toucher" (to feel) sans pour autant forcément déjà en comprendre la signification, mais de sorte que soit facilitée leur acquisition plus tard.
Si pour ces spécialistes, l’enjeu était palpable, il en allait bien autrement dans l’enseignement proprement dit auprès de jeunes enfants qui œuvre dans un cadre d’objectifs à atteindre au travers d’un programme bien établi. 
En effet, la géométrie tortue ne correspond pas toujours à celle enseignée dans les écoles dans la mesure où la tortue se déplace comme le fait de manière naturelle – et dont il peut en prendre conscience - l’enfant qui la commande : partir d’où on est, prendre une direction et avancer dans celle-ci d’un certain nombre de pas (""jouer « tortue""). Ainsi en va-t-il, par exemple, de la famille des polygones réguliers et, plus précisément, du triangle.
Dans l’enseignement, les polygones convexes réguliers sont définis par des angles et des côtés égaux. En Logo, ils se construisent par la formule générale qui obéit au Théorème du Tour complet de la Tortue (TTT) en 360° :
En considérant que le polygone se dessine par la droite et où nbr est un nombre quelconque et N est le nombre d’angles et de côtés, compris entre 3 et l’infini (note : Si N = 1, on obtient un point et si N= 2, un segment de droite).
Or, le problème se pose pour le triangle dont on enseigne que la somme de ses angles est toujours égale à 180°. Ce qui n’est pas le cas en Logo puisque l’on fait tourner la tortue 3 fois à 120°.
En fait, dans son exploration de l’espace, le robot tortue contourne l’objet géométrique. Tout comme l’enfant qui la commande, parcourerait un triangle sur le sol, elle le dessine sans en avoir une connaissance (ou une définition) préétablie. En conséquence de quoi, ses rotations doivent se penser en termes d’angles supplémentaires et non d’angles "internes". En effet, la tortue s’arrêtant avant de tourner « regarde » devant elle, c’est-à-dire, dans le sens du segment de droite qu’elle vient de dessiner, puis tourne dans celui où elle va dessiner ensuite.
Ceci, comme d'autres aspects, ne va pas manquer d'être très déconcertant pour certains enseignants.
« "Est-ce Logo marche ? Nous constatons que oui, il marche à conditions de lui donner des jambes pédagogiques."".
Plus tard vont apparaître d’autres recherches dans un champ plus large que l’apport mathématique de Logo et, plus particulièrement, sur son apport possible dans l’enseignement en général.
Ici, l’optique, est, donc, claire :en quoi Logo peut aider l'enseignant dans la poursuite de ses objectifs :
« En éducation, l’informatique peut être d’abord considérée comme une technologie éducative, c’est-à-dire un ensemble de moyens pouvant faciliter l’enseignement et l’apprentissage des disciplines scolaires traditionnelles. »
Mais force est de constater que les phases expérimentales de ces recherches vont se révéler souvent bien courtes pour évaluer les effets à terme de son usage comme le regrette, par exemple, Valke qui, bien que n’observant pas de différences significatives entre son groupe expérimental et son groupe témoin, croit toutefois pouvoir déceler une tendance très claire : si la période de recherche avait été plus longue, un effet aurait pu apparaître .
Or, de leur côté, Verchaffen, De Corte et Schrooten font remarquer l’importance d’un quota minimum d’heures de pratiques qui devrait, effectivement, avoir un impact sur les aptitudes cognitives des élèves des écoles élémentaires.. mais à condition que cette pratique soit conduite dans un environnement didactique vigoureux et orienté. Il estiment ce quota à une cinquantaine d’heures .
Cette inquiétude de ne pas voir apparaître des résultats qui soient à la fois rapides et tangibles peut s’observer d’une autre manière comme chez Noss et Hoyles qui s’interrogent sur le plaisir d’utiliser REPETE ou le retour au mode pilotage, c’est-à-dire que l’élève ne prend pas appui sur le mode procédural pourtant déjà employé. Ils en tirent les conclusions qu’ils n’ont pas réfléchi sur les structures mathématiques et n’ont pas intégré la compréhension de l’outil .
Ce à quoi, Papert avait déjà répondu dans la préface de l’ouvrage précité de Hoyles et Noss, en soulignant que le plaisir de cette exploitation de cette commande magique par les enfants constitue, en fait, une approche de la récursivité. D’autre part, l’intérêt que constitue la commande REPETE n fois en tant qu’une approche intuitive de la multiplication ; même si elle n’est pas évidente de premier abord.
Somme toute, l’apport de ces recherches expérimentales ne peut se comprendre à la lumière de s’éclairer par l'aphorisme suivant : « "S’il faut neuf mois à une femme pour concevoir un enfant, suffit-il d’en réunir neuf pendant un mois pour arriver au même résultat ?" ».
Or, Papert inscrit l’apport de l’informatique (et de Logo) dans une perspective de changement culturel, c’est-à-dire à long terme. Mais, par ailleurs, il faut bien avouer combien est difficile de trouver les moyens pour mener une recherche sur si long terme. Ainsi, Biernaux va s'y atteler en suivant des enfants de 4 classes pendant 7 années mais ne pourra exploiter les observations obtenues faute de moyens, mais aussi par le désintérêt suscité par Logo après un aussi long laps de temps.
L’accompagnement : problème central de l’environnement Logo.
S’ils saluent sa relative simplicité et son caractère ludique qui rendent les premiers pas facile, Retschitzki et Gurtner insisteront plus tard sur le fait que Logo n'est ni aussi simple qu’il n’y paraît, ni véritablement limité dans ses possibilités. Par conséquent, pour que sa pratique soit profitable, un accompagnement est nécessaire mais il importe non seulement que celui-ci se fasse de manière continue mais surtout qu’il soit de qualité et, donc, opéré par des personnes disposant en la matière d’un sérieuse compétence. Observation plus que pertinente, mais qui reste à définir : par exemple, comment répondre à une équipe avec une pratique d’un heure par semaine pendant 6 ans qui demande à son enseignante comment écrire un programme en Logo qui compte le nombre de matchs à organiser pour un tournoi de ping-pong ? Que faire si une équipe de deux enfants de 6 ans, avec un an de logo dans les mêmes conditions, décide de construire une échelle centrée sur l’écran ?
À cet égard, il faut bien reconnaître que Papert reste sans doute par trop dans le vague à l’instar, d’ailleurs, de son maître à penser Piaget qui n’a jamais fourni (ou voulu fournir) d’indications claires en la matière (pour peu que cela soit possible). Mais, des travaux de l’un et de l’autre, on peut imaginer une pédagogie qui ne céderait ni au romantisme rousseauiste, ni à l’empirisme de l’éducation traditionnelle qui conçoit l’esprit de l’enfant comme entièrement – et exclusivement - formé par les interventions des adultes ou, éventuellement, d’enfants plus avancés. Mais, par contre, qui soulignerait l’importance d’un modèle d’éducation qui s’appuie sur l’activité constructrice et créative de l’enfant sans pour autant nier les rôles de la transmission culturelle et de l’interaction sociale.
Bref, il n’existe pas de recettes toutes faites en la matière.
C’est ainsi que pût s’observer aussi bien une large éventail de modalités d’accompagnement allant de la non-directivité complète aux manuels avec exercices préétablis de Christina Gaillard.
l'approche pédagogique ou scolaire.
Comme il fallait s’y attendre, à coup d’expérimentations contrôlées et de tests statistiques, les pédagogues se sont appliqués à proposer leurs recettes pour un bon usage de Logo, avec en vue l’optimisation de son efficacité dans un usage scolaire.
Par exemple, Tamara Lemerisie et d’autres vont proposer une classification hiérarchisée en fonction d’une efficacité croissante :
En conséquence de quoi, s'appuyant sur les études précitées, Olivier De Marcellus proposera une sorte de vade-mecum du bon animateur Logo :"
On est loin, très loin, des principes directeurs à la base du projet tel qu’énoncés par Papert (notamment sur le concept socio-cognitif) et, à la lecture de ce qui précède, on comprend mieux ses déclarations de 1997 citées en début de partie.
D’une manière plus générale, on est, en effet, frappé de l’absence d’autonomie laissée à l’enfant (devenu ici l’élève) dans la démarche ainsi que du gommage de l’aspect affectif dans son apprentissage, et, dès lors, on peut s’interroger sur les démarches ou concepts rééellement acquis. En vertu de quoi, il devenait légitime de se poser la question de l’utilité de Logo dans un tel contexte surtout eu égards aux coûts non négligeables tant en termes d’investissements personnels que matériels.
l'approche "facilitation".
Aux antipodes de ces démarches visant à « scolariser » Logo qui leur sont postérieures, les premiers usages de Logo étaient fortement teintés de cette non-directivité telle que décrite par Lemerise comme les « projets libres » où la passivité de l’accompagnateur est la règle. De fait, si l’attitude passive peut fonctionner lors de la découverte de Logo, durant la phase de « pilotage » de la tortue durant laquelle peut-être même est-elle souhaitable, elle montre vite ses limites. Mais celle-ci reflétait-elle bien la pensée de Papert et de Piaget ?
L’utilisation du terme « facilitateur » par Papert et, à sa suite, par Bossuet, semble avoir, en effet, induit chez certain l’idée d’une référence implicite à Carl Rogers qui n’est pourtant jamais cité par ces auteurs. Avant toute chose, il convient de rappeler que celui-ci, primo-auteur de la formule n’a, en définitive, jamais été non-directif. Lui-même est revenu d’ailleurs sur ce terme en lui préférant celui d’Approche Centrée sur la Personne. La non-directivité n’est pas le laisser-faire ou le laxisme comme aiment à le faire croire autant ses détracteurs que parfois ses apologistes.
Par ailleurs, Papert parle en réalité de « "facilitateur d’apprentissage" » Tant dans les videos disponibles que dans « Jaillissement de l’esprit », il ne se confine nullement dans une attitude passive où il se bornerait à attendre les demandes des enfants, mais intervient, suggérant ici une solution, soulignant là une situation qu’il estime exploitable : « "une situation riche" ». La question reste comment et quand intervenir à bon escient ?
Forte d’une expérience de sept années de faciltateur dans un atelier Logo inséré dans une école, Mirelle Daubresse considérera comme essentielle le respect de l’autonomie de l’apprentissage chez les enfants si l’on veut que leur intérêt reste constant et qu’ils puissent trouver dans leurs activités en Logo les matériaux dont ils ont, personnellement, besoin et/ou qu’il leur seraient utiles. 
De l’approche centrée sur la personne (en l’occurrence, l’enfant) de Rogers, elle retient que le rôle du facilitateur d’apprentissage est d’aider à choisir et à clarifier les projets des enfants de l’atelier, et de prendre en compte le désir de chacun de réaliser les projets, seul ou en équipe, qui ont une signification pour lui car c’est là que se niche la force motivante qui va soutenir un apprentissage significatif. Mais, dans le cadre spécifique de Logo, d’autres exigences sont requises : 
Quant aux principes d’intervention proprement dits, notamment en vue d’aider les enfants à franchir un pas de plus, elle considére qu’un principe doit toujours guider le facilitateur : garder constammant en-tête la notion d’équilibration développée par Piaget, selon laquelle, pour être efficace, le déséquilibre, ici provoqué, ne doit jamais être ni insuffisant, ni être excessif, et s’appuyer sur les acquis .
Quand on sait que cette formation, appuyée par des longs extraits video in situ et des analyse de projets réels s’adressait à de petits groupes sur 20 jours répartis sur une année, on mesure combien l’accompagnement en Logo implique d’engagement personnel. Y compris, d'ailleurs, dans son usage plus "scolaire".
Une tortue prétexte : le dimension affective.
Comme signalé plus haut, Papert insiste sur le rôle de l’affectivité dans l’apprentissage. Si cet aspect est bien présent dans la dernière approche décrite ci-dessus, il l’est beaucoup moins dans l’approche pédagogique qui semble l’avoir gommée dans ses expérimentations. Mais force est de reconnaître avec Piaget que les outils pour la valider ou simplement l’étudier n’existent pas en dehors d’une observation forcément individuelle et, donc, peu propice à une généralisation.
En annexe, on trouvera quelques exemples tirés d’expériences en atelier dans lesquelles les praticiens de Logo se retrouveront certainement. Ils peuvent apporter un éclairage sur les événements affectifs susceptibles d’exercer une influence sur les apprentissages tels qu’ils peuvent survenir dans un environnement Logo. Soulignons au passage que la tortue, cet animal emblème, même si son choix doit beaucoup au hasard, présente des caractéristiques relativement neutres d’un point de vue affectif : un animal sympathique mais sans plus. Pas vraiment à chouchouter.
A leur lecture, on ne peut que regretter l’absence de publications relatives à l’utilisation de Logo en matière de remédiation et, plus généralement, sur la manière dont les enfants se saisissent de Logo pour régler certains obstacles à leur apprentissage. Ni, en miroir, comment son usage permet de détecter ces derniers. Par exemple, plusieurs mémoires de fin d’études ont été rédigés sur ce sujet à l’Université de Lille 2 ou à l’Institut Marie Haps à Bruxelles selon lesquels de bons résultats avaient été obtenu en orthophonie/logopédie.
Or, d’une manière générale c’est, semble-t-il avec les enfants présentant des difficultés d’apprentissage que Logo et sa tortue se sont révélés particulièrement prometteur dans la mesure, entre autres, qu’il ne demandait qu’un investissement limité à un personnel aguerri en la matière.
Épilogue.
Logo a marqué le passage d’une conception de l’emploi de l’ordinateur dans l’enseignement reposant sur un usage tutorial vers sa maîtrise que l’on jugeait devenir indispensable. L’enjeu, à cette époque, n’était pas nécessairement de favoriser l’apprentissage comme le concevait Papert, mais celui d’une véritable acculturation passant par sa programmation : la question était déjà posée au début des années 70 de savoir combien de temps quelqu’un qui ne connaît rien à l’ordinateur pourra être considéré comme instruit.
Lorsqu’il apparaît dans le paysage informatique, une autre question commençait à se poser : est-ce que l’alternative se limite bien à ce seul choix ou n’existe-t-il pas une troisième voie : celle d’un outil.
En effet, à cette époque sortiront les premiers logiciels bureautiques comme, par exemple, sur l’Apple II, Visicalc (tableur), Visidex (Gestion de fiches), Visifile (base de données) ou Visi On (générateur de graphiques) développés par Visicorp, ou encore Apple Plot (générateur de graphiques) et Apple Pie (Traitement de texte).
Commentant son texte 30 ans plus tard, Luehrmann concédait que, dans la trichotomie exposée par Taylor, c’est seulement l’utilisation comme outil qui a eu véritablement un impact dans les écoles et, plus particulièrement, les tableurs .
Tout comme Papert, il concluait en regrettant le monopole de l’école sur l’éducation qui empêche les innovations. Prônant le développement des cours sur Internet, rejoignant ainsi le point de vue de plusieurs auteurs qui, pensant que les systèmes éducatifs actuels ne peuvent pas sérieusement intégrer les technologies informatiques, prévoient des changements très profonds des modes de scolarisation.
Mais, même s’il a joué un grand rôle, l’abandon de Logo ne doit pas seulement se comprendre au travers de son rejet par un monde pédagogique orienté sur l’enseignement plus que sur l’apprentissage et, en définitive plus soucieux de l’enseignant que de l’apprenant. L'essor de ce qu’on appelait alors les microordinateurs a d’abord profité à Logo mais celui-ci a souffert ensuite de leur succès et de l’accélération de l’innovation en la matière qui allait lui retirer plusieurs de ses principaux atouts :
En outre, il faut le rappeler, personne à l’époque n’avait vu venir l’Internet.
Papert a-t-il vraiment cru que Logo allait changer l’école ? Vraisemblablement pas, mais jusqu’à son accident de 2006 qui a mis fin à sa carrière de chercheur, il est resté convaincu, plus encore que d’autres, que l’informatique – et plus spécifiquement l’ordinateur personnel - allait modifier les conditions des apprentissages entraînant de manière inéluctable des changements dans l’enseignement et, par voie de conséquence, de l’école appelée, selon lui, à devenir obsolète à moyen terme. Dans cette perspective, il s’intéressera, notamment vers les conceptions de pédagogies actives de Montessori ou de Dewey.
En l'occurrence, Logo doit être considéré a posteriori comme un premier pas dans cette dynamique qui a bousculé le paradigme univoque de l’utilisation tutoriale de l’informatique. Pour Papert, il a été certainement l’occasion d’une mise en pratique de ce qu’il avait appris auprès de Piaget.
Extrait d'un entretien avec Papert :