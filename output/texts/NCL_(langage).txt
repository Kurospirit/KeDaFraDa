NCL (langage)

NCL (sigle de Nat System’s Command Language) est un langage de programmation de 4 génération, créé par Nat System pour l'Environnement de développement intégré NSDK et plus tard utilisé dans Natstar.
Syntaxe.
Structures de contrôle.
Boucles.
Bien qu’elles aient toutes un rôle similaire, chaque boucle est pourtant adaptée à une situation :
Boucle sans condition au début ou à la fin (quand la condition est au milieu des traitements):
Structures conditionnelles.
Structure si : condition simple
Structure si … sinon : condition avec alternative unique
Structure si … ou si … ou si … : condition avec alternatives multiples
Structure atteindre … cas x … cas y …" : embranchement vers un bloc d’instructions énuméré
Evaluate fonctionne avec les types entiers, flottants et chaîne (attention, "A" ≠ "a"). Les expressions dans les Where peuvent être arbitrairement complexes, mais le code est plus efficace quand on utilise uniquement une expression entière dans l'Evaluate et de simples constantes littérales entières (12, $7F) en évitant les grands intervalles (n1 To n2 quand n2 - n1 >= 16) dans les Where.
La commande Break sort immédiatement de la boucle en cours (For, While, Repeat ou Loop), même si elle apparaît dans un Evaluate.
De même, Continue ramène au début de la boucle (en passant à l'itération suivante dans le cas d'une boucle For).
Les instructions Exit ou Return font quitter fonction, instruction ou évènement, en retournant la valeur par défaut (0, 0.0 ou "") selon le type retourné dans le cas des fonctions et évènements.
Avec Return uneValeur, uneValeur sera renvoyée à la méthode appelante (si l'on est dans une fonction ou un évènement appelé par Send avec variable de retour).
Exemples.
Fonction qui retourne l’aire d’un cercle :
La dernière ligne de l'exemple ci-dessus va afficher une fenêtre ayant pour titre "AireDuCercle" et pour contenu la phrase : "L'aire d'un cercle de rayon 2.4cm est 18.0864 cm²."