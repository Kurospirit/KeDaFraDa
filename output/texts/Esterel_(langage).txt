Esterel (langage)

Esterel est le nom d'un langage de programmation conçu dans les années 1980 par un groupe dirigé par Gérard Berry.
Ce langage est dit synchrone et réactif. Il est impératif et permet l'expression simple du parallélisme et de la préemption. Il est de ce fait bien adapté à la modélisation des systèmes à prépondérance contrôlée.
En tant que langage appartenant à la classe des systèmes informatiques "réactifs" :
Ce langage peut modéliser de nombreux systèmes et milieux : logiciels, matériels, contrôle de flux etc.
Syntaxe/comportement du langage.
Un signal S peut être activé ou désactivé. On l'active via l'instruction emit S.
On change sa valeur (par exemple une valeur du type entier) via l'instruction emit S(valeur).
Pour illustrer l'instantanéité de l'activation des signaux, les instructions emit O; emit O1; emit O2; aboutissent à l'activation instantanée et simultanée en une seule itération des trois signaux O, O1, et O2.
Une autre illustration : le symbole || signifie la parallélité des instructions qu'il sépare.
Un exemple de module :
Un exemple d'utilisation du module précédent dans un autre module :
AB / O signifie que le O de la sous-fonction ABRO est nommé AB dans la fonction ABCRO.
Le langage est encore en développement, sans véritable standard établi. Il existe plusieurs compilateurs Esterel qui permettent de générer du code C, VHDL ou Verilog.
La société Esterel Technologies a engagé un processus de normalisation de la version 7 du langage à l'IEEE en 2005. Le manuel de référence présenté pour la normalisation est disponible.
Il en existe une version orientée objet : Esterel ++, conçue par Dassault Aviation. Différents formalismes graphiques (Syncharts, UML) sont proposés.